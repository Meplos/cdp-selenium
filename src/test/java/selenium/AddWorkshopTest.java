/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package selenium;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.Test;
import static org.junit.Assert.*;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.WebDriverWait;
import static org.openqa.selenium.support.ui.ExpectedConditions.presenceOfElementLocated;
import java.io.File;
import java.net.http.WebSocket;
import java.time.Duration;


/**
 * Lors de l'écriture des tests, on s'est rendu compte de bcp d'erreur dans le cod
 * fournis. On a donc décider de le corrigé (après tout ça sert à ça aussi des tests).
 * Les modification on était faite dans les fichier:
 *  - index.ejs :
 *      -   Suppression de la balise fermante </ul> en trop
 *      -   Ajout encapsulation de la desciption d'un atelier dans la liste
 *      -   Ajout d'une classe name au titre h5 et d'une classe description a la div précédement créé. 
 *  - index.js :
 *      -   Dans le callback de post("/workshop"), redirection vers la page d'accueil
 *          au lieu de re-rendre la page d'accueil sans changer l'URL.
 * 
 * Si besoin le projet se trouve sur le dépot github :
 *      https://github.com/Meplos/CDP-workshop
 *  
 */
public class AddWorkshopTest {

    final String nameValue = "Test";
    final String descriptionValue = "hello world";
    final String nameField = "#name";
    final String descriptionField = "#description";

    @Test public void testAddOne(){
        App.setUpChromeDriver();
        WebDriver driver = new ChromeDriver();
        driver.manage().timeouts().implicitlyWait(1, TimeUnit.SECONDS);
        String resName, resDesc;
       try {
            driver.get("http://localhost:3000/");
            WebElement button = driver.findElement(By.cssSelector("a"));
            button.click();
            WebElement name = driver.findElement(By.cssSelector(nameField));
            name.sendKeys(nameValue);
            WebElement desc = driver.findElement(By.cssSelector(descriptionField));
            desc.sendKeys(descriptionValue);
            WebElement send = driver.findElement(By.cssSelector("button"));
            send.click();
            List<WebElement> items = driver.findElements(By.cssSelector("li"));

            resName = items.get(items.size() - 1).findElement(By.cssSelector(".name")).getText();
            resDesc = items.get(items.size() - 1).findElement(By.cssSelector(".description")).getText();
        } finally {
            driver.quit();
        }


        assert(resName.equals(nameValue) && resDesc.equals(descriptionValue));

    }

    @Test public void testNoDescription(){
        App.setUpChromeDriver();
        WebDriver driver = new ChromeDriver();
        driver.manage().timeouts().implicitlyWait(1, TimeUnit.SECONDS);
        String formUrl = "http://localhost:3000/workshop";
        String currentUrl;
        try {
            driver.get("http://localhost:3000");
            
            WebElement button = driver.findElement(By.cssSelector("a"));
            button.click();
            WebElement name = driver.findElement(By.cssSelector(nameField));
            name.sendKeys(nameValue);
            WebElement send = driver.findElement(By.cssSelector("button"));
            send.click();
            currentUrl = driver.getCurrentUrl();

        } finally {
            driver.quit();
        }
        assertEquals(formUrl, currentUrl);

    }

        @Test public void testNoName(){
        App.setUpChromeDriver();
        WebDriver driver = new ChromeDriver();
        driver.manage().timeouts().implicitlyWait(1, TimeUnit.SECONDS);
        String formUrl = "http://localhost:3000/workshop";
        String currentUrl;
        try {
            driver.get("http://localhost:3000");
            
            WebElement button = driver.findElement(By.cssSelector("a"));
            button.click();
            WebElement description = driver.findElement(By.cssSelector(descriptionField));
            description.sendKeys(descriptionValue);
            
            WebElement send = driver.findElement(By.cssSelector("button"));
            send.click();
            currentUrl = driver.getCurrentUrl();

        } finally {
            driver.quit();
        }
        assertEquals(formUrl, currentUrl);

    }
}
